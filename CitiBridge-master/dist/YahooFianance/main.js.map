{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/http-client.service.ts","./src/app/app.module.ts","./src/app/userstock/userstock.component.html","./src/app/userstock/userstock.component.ts","./src/app/users/users.component.ts","./src/app/users/users.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport { HttpClientService } from './http-client.service';\nimport { LoginComponent } from './login/login.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'YahooFinance';\n\n\n\n\n}\n","<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * Delete the template below * * * * * * * * * * -->\n<!-- * * * * * * * to get started with your project! * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!--<div *ngIf=\"login.msgTrue\">\n<a routerLink=\"/users\"></a>\n</div>-->\n\n\n<router-outlet></router-outlet>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Userstock } from './users/marketCap.model';\nimport { LoginComponent } from './login/login.component';\n\nexport class User{\n  constructor(\n    public userID:number,\n    public username:string,\n    public password:string,\n  ) {}\n}\nexport class MarketCapService {\n  perc_ChangeIn_Price!: Number;\n  stockPrice!:Number;\n  stock_Symbol!: String;\n  \n \n  constructor() { \n    perc_ChangeIn_Price : Number;\n    stockPrice:Number;\n    stock_Symbol: String;\n  }\n  \n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpClientService {\n\n  baseURL: string = \"http://localhost:8085/\";\n  constructor(\n    private httpClient:HttpClient,\n    private router:Router\n  ) { \n     }\n\n     getUsers()\n  {\n    console.log(\"test call\");\n    return this.httpClient.get<User[]>('http://localhost:8085/users');\n  }\n\n    /*getUserDetails(username,password)\n     {\n       return this.httpClient.post('http://localhost:8086/login',{\n         username,\n         password\n        }).subscribe(data=>{\n          console.log(data, \"is what we got from the server\")\n        })\n     }*/\n\n     login(data):Observable<any>\n     {\n       console.log(\"I am a server\");\n       return this.httpClient.post('http://localhost:8085/login',data,{responseType:'text'});\n\n     }\n\n     /*login(data)\n     {\n      return this.httpClient.post('http://localhost:8085/login',data)\n     }*/\n\n     getMarketCap(start:number, end: number)\n     {\n       // console.log(\"test call\");\n       // console.log(start)\n       // console.log(end)\n       if(start==45000 && end==100000)\n         return this.httpClient.get<HttpClientService[]>('http://localhost:8085/stocks/45000/100000');\n       if(start==100000 && end==300000)\n         return this.httpClient.get<HttpClientService[]>('http://localhost:8085/stocks/100000/300000');\n       if(start==300000 && end==600000)\n         return this.httpClient.get<HttpClientService[]>('http://localhost:8085/stocks/300000/600000');\n       else\n        return this.httpClient.get<HttpClientService[]>('http://localhost:8085/stocks/600000/1500000');\n     }\n    \n     public saveSelectedStock(userStock : Userstock) : Observable<string>{\n      const headers = { 'content-type': 'application/json'}; \n     // var requestHeader = { headers: new HttpHeaders({ 'Content-Type': 'text/plain', 'No-Auth': 'False' })};\n //const headers = new HttpHeaders().set('Content-Type', 'text/plain; charset=utf-8');\n//const httpOptions = {headers: new HttpHeaders({'auth': 'false'})};\n      const body=JSON.stringify(userStock);  \n   return this.httpClient.post<string>(this.baseURL + 'save-stocks', body , { 'headers':headers,responseType:'text' as 'json' });\n    // return this.httpClient.post<string>(this.baseURL + 'save-stocks', body , { responseType:'text' as 'json'});\n     \n      \n    }\n\n    getEmployees()\n  {\n    //console.log(\"test call\");\n    \n    return this.httpClient.get<HttpClientService[]>('http://localhost:8085/fetch-stocks/'+LoginComponent.user_id);\n  }\n    \n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport { UsersComponent } from './users/users.component';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { UserstockComponent } from './userstock/userstock.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    UsersComponent,\n    LoginComponent,\n    UserstockComponent\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [LoginComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<h1>MARKET CAP BASED TRADE RECOMMENDATION SYSTEM</h1>\n<img id=\"img1\" src=\"assets/images/table.png\" alt=\"HomePage\">\n<br>\n<h4 id=\"welcome\">Welcome!</h4>\n<br><br><br><br><br><br><br><br>\n<table border=\"1\">\n    <thead></thead>\n    <tr>\n      \n      \n      \n      <th>Stock Quantity</th>\n      <th>Stock Price</th>\n      <th>Stock Symbol</th>\n      </tr>\n    \n    <tbody>\n        <tr *ngFor=\"let user of employees\">\n           \n            <td>{{user.perc_ChangeIn_Price}}</td>\n            <td>{{user.stockPrice}}</td>\n            <td>{{user.stock_Symbol}}</td>\n            </tr>\n    </tbody>\n      </table>","import { Component, OnInit } from '@angular/core';\nimport { HttpClientService } from '../http-client.service';\nimport { MarketCapService } from '../users/marketCap.model';\n\n@Component({\n  selector: 'app-userstock',\n  templateUrl: './userstock.component.html',\n  styleUrls: ['./userstock.component.css']\n})\nexport class UserstockComponent implements OnInit {\n employees:MarketCapService[];\n  constructor(private httpClientService:HttpClientService) { }\n\n  ngOnInit() {\n    this.httpClientService.getEmployees().subscribe(\n     response =>this.handleSuccessfulResponse(response),\n    );\n    \n  }\n\n  handleSuccessfulResponse(resp:any)\n{\n    this.employees=resp;\n}\n\n}\n","import { Variable } from '@angular/compiler/src/render3/r3_ast';\nimport { Component, Input, OnInit ,OnChanges } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport {Router} from '@angular/router';\nimport { HttpClientService } from '../http-client.service';\nimport { LoginComponent } from '../login/login.component';\nimport { MarketCapService } from './marketCap.model';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  template: ` id ` ,\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit , OnChanges {\n\n  //stocks:MarketCapService[];\n  /*users:string[];\n  constructor(\n    private httpClientService:HttpClientService\n  ) { }\n\n  ngOnInit() {\n    this.httpClientService.getUsers().subscribe(\n     response =>this.handleSuccessfulResponse(response),\n    );\n  }\n\n  handleSuccessfulResponse(response)\n{\n    this.users=response;\n}*/\n@Input() id: number;\nmarketcaps!: HttpClientService[];\nsaved = \" \";\nuserID:number;\nformGroup:FormGroup;\nmsgTrue=false;\n//stockQuantity:number;\npublic static quantity:number;\n\n   \n  constructor(\n    private httpClientService:HttpClientService,\n    private login :LoginComponent,\n    private router:Router\n  ) { }\n\n  ngOnChanges() {\n    this.userID=this.id;\n    \n  }\n\n\n    ngOnInit() {\n      this.initForm();\n      \n    }\n\n    initForm(){\n      this.formGroup=new FormGroup({\n        quantity: new FormControl('', Validators.required)\n      })\n    }\n   \n\n    /*let resp = this.httpClientService.saveSelectedStock(this.saveStock);\nresp.subscribe(data => {\n  this.saved = data;\n});*/\n    \n  random1(start:number,end: number)\n  {\n    this.httpClientService.getMarketCap(start,end).subscribe(\n      response =>this.handleSuccessfulResponse(response),\n     );\n  }\n\nhandleSuccessfulResponse(resp:any)\n{\n    this.marketcaps=resp;\n}\n\nrabdom3()\n{\n  \n  if(this.formGroup.valid)\n  {\n    UsersComponent.quantity=this.formGroup.value;\n  }\n\n}\n\n/*lgbtnclick(stock_Symbol:string,stockPrice:number,perc_ChangeIn_Price:number) {\n  //this.msgTrue=true;\n  //alert(UsersComponent.quantity);\n  this.stockQuantity = this.rabdom3();\n  console.log(this.stockQuantity);\n  this.saveStock(stock_Symbol,stockPrice,perc_ChangeIn_Price,this.stockQuantity);\n}*/\n\nsaveStock(stock_Symbol:string,stockPrice:number,perc_ChangeIn_Price:number,stock_quantity:number)\n{\n  //const user_id=this.login.formGroup.controls['user_id'].value\n  //const user_id=this.login.formGroup.getRawValue()['user_id'];\n  //const user_id=this.login.id;\n  //const user_id=LoginComponent.user_id;\n\n  // const user_id =this.login.formGroup.get(\"user_id\").value;\n //this.msgTrue=true;\n //var stockQuantity:number;\n  if(this.formGroup.valid)\n  {\n    UsersComponent.quantity=this.formGroup.value.quantity;\n  }\n   const saveStock = \n{\n  \"user_id\": LoginComponent.user_id,\n  \"Symbol\": stock_Symbol,\n  \"stockprice\": stockPrice,\n  \"quantity\": stock_quantity\n}\n\n  console.log(saveStock);\n   //var person = prompt(\"Please enter your name: \", \"Username\");\n   let resp = this.httpClientService.saveSelectedStock(saveStock);\nresp.subscribe(data => {\n  console.log(data);\n  //this.saved = data;\n  //console.log(this.saved);\n}\n);\nconsole.log(LoginComponent.user_id);\n\n\n}\n\nrandom2(){\n  this.router.navigate([\"userstock\"]);\n}\n\n\n\n\n\n\n\n\n\n\n}\n","<h1>MARKET CAP BASED TRADE RECOMMENDATION SYSTEM</h1>\n<img id=\"img1\" src=\"assets/images/saved.png\" alt=\"HomePage\">\n<br>\n<h4 id=\"welcome\">Welcome!</h4>\n<br>\n<h4>Choose the amount:</h4> \n<button id = \"button1\" class=\"stockbtn\" (click)=\"random1(45000,100000)\">Rs. 45,000 to Rs. 1 lac</button>\n<button id=\"button2\" class=\"stockbtn\" (click)=\"random1(100000,300000)\">Rs. 1 lac to Rs. 3 lacs</button>\n<button id=\"button3\" class=\"stockbtn\" (click)=\"random1(300000,600000)\">Rs. 3 lacs to Rs. 6 lacs</button>\n<button id=\"button4\" class=\"stockbtn\" (click)=\"random1(600000,1500000)\">Rs. 6 lacs to Rs. 15 lacs</button>\n<br><br>\n\n\n\n<table border=\"1\">\n    <thead>\n      <tr id=\"row1\">\n        <th id= \"thead1\">STOCK SYMBOL</th>\n        <th>STOCK PRICE</th>\n        <th>% CHANGE IN PRICE</th>\n        <th id=\"thead2\">QUANTITY</th>\n        <th id=\"emptythead\"></th>\n        </tr>\n\n    </thead>\n    \n    \n    <tbody>\n        <tr *ngFor=\"let user of marketcaps\">\n            <td>{{user.stock_Symbol}}</td>\n            <td>{{user.stockPrice}}</td>\n            <td>{{user.perc_ChangeIn_Price}}</td>\n           <td>\n            <input class=\"tableinput\" #stockQuantity type=\"number\" name=\"quantity\" id=\"stockQuantity\" >\n            </td>\n            <td style=\"background-color: #fff; border-width: 0px;\">\n              <button class=\"stockbtn\"(click)=\"saveStock(user.stock_Symbol,user.stockPrice,user.perc_ChangeIn_Price, stockQuantity.value)\">Save</button> \n\n            </td>\n            </tr>\n    </tbody>\n      </table>\n      <br><br><br>\n      <button id=\"viewbtn\"class=\"stockbtn\" btn (click)=\"random2()\">VIEW STOCKS</button>\n\n  ","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { Userstock } from './users/marketCap.model';\nimport { UsersComponent } from './users/users.component';\nimport { UserstockComponent } from './userstock/userstock.component';\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent },\n  {path: 'login', component:LoginComponent},\n  { path: 'users', component: UsersComponent },\n  {path:'userstock',component:UserstockComponent}\n  \n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { identifierModuleUrl } from '@angular/compiler';\nimport { Route } from '@angular/compiler/src/core';\nimport { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\nimport { HttpClientService } from '../http-client.service';\nimport { UsersComponent } from '../users/users.component';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  template:`\n  <app-users [id]=\"id\"></app-users>`,\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n  \n  \n  id:number;\n  msgTrue=false;\n  formGroup:FormGroup;\n  public static user_id:number;\n  \n\n  constructor(private httpClientService:HttpClientService,private router:Router\n    ) { }\n\n\n\n  ngOnInit() {\n    this.initForm();\n  }\n\n  /*loginUser(event)\n  {\n    event.preventDefault();\n    const target=event.target;\n    const username=target.querySelector('#username').value\n    const password=target.querySelector('#password').value\n    this.httpClientService.getUserDetails(username,password);\n\n    console.log(username,password);\n  }*/\n\n  initForm(){\n    this.formGroup=new FormGroup({\n      user_id: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required),\n    })\n  }\n  \n\n  loginProcess()\n  {\n    //var id;\n    if(this.formGroup.valid)\n    {\n      this.httpClientService.login(this.formGroup.value).subscribe(result=>{\n        console.log(result);\n        if(result==\"Login Successful!\")\n        {\n          alert(result);\n          LoginComponent.user_id=this.formGroup.value.user_id;\n          //id=this.user_id;\n          console.log(\"user id is\"+LoginComponent.user_id);\n          \n           this.id=this.formGroup.value.user_id;\n          console.log(this.id);\n\n          this.msgTrue=true;\n        \n          this.router.navigate([\"users\"]);\n         \n         \n        }\n        else if(result==\"Invalid credentials. Try again\")\n        {\n          alert(result);\n          this.msgTrue=false;\n          this.router.navigate(['login']);\n        }\n       \n      \n      }\n      )\n     \n    }\n\n  }\n\n  setUserId()\n  {\n    return this.id;\n\n  }\n  \n \n\n  /*loginProcess()\n  {\n    if(this.formGroup.valid)\n    {\n      this.httpClientService.login(this.formGroup.value)\n    }\n  }\n\n  onSubmit(loginForm:NgForm){\n    console.log(loginForm)\n  }*/\n\n}\n","<!--<form (submit)=\"loginUser($event)\">\n    <input type=\"text\" placeholder=\"username\" >\n    <input type=\"text\" placeholder=\"password\"  >\n    <input type=\"submit\" value=\"submit\">\n</form>\n\n\n\n\n<form  (ngSubmit)=\"onSubmit(loginForm)\" #loginForm=\"ngForm\">\n    <input type=\"text\" name=\"username\" placeholder=\"username\" required autofocus ngModel>\n    <input type=\"text\" name=\"password\" placeholder=\"password\" required autofocus ngModel >\n    <button btn btn-primary type=\"submit\">Login</button>\n</form>-->\n\n    <h1>MARKET CAP BASED TRADE RECOMMENDATION SYSTEM</h1>\n    <body>\n<img id=\"img1\" src=\"assets/images/login.png\" alt=\"Market Cap\">\n<form [formGroup]=\"formGroup\" (ngSubmit)=\"loginProcess()\">\n    <br>\n    <label id=\"enter_user\" class=\"label_login\">Enter User ID:</label>\n    <br><br>\n    <input type=\"text\" placeholder=\"User ID\" formControlName=\"user_id\">\n    <br>\n    <label id=\"enter_password\" class=\"label_login\">Enter Password:</label>\n    <br><br>\n    <input type=\"password\" placeholder=\"**********\" formControlName=\"password\" >\n    <input type=\"submit\" id=\"login_button\" value=\"LOGIN\" class=\"center\">\n</form>\n\n<!--<div *ngIf=\"msgTrue else showLogin\" roterLink=\"/users\"> successful</div>\n<ng-template #showLogin><a routerLink=\"/login\"></a></ng-template>-->\n</body>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}